version: "3.8"

services:
  dfq-ig:
    container_name: dfq-ig
    image: devspace-forgerock-quickstart/frig:7.2.0-fbc
    build:
      context: ./docker/frig
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.5"
          memory: 512M
    env_file:
      - .env/frig/.env
    ports:
      - "8082:8080/tcp"
    depends_on:
      dfq-am:
        condition: service_healthy
    links:
      - dfq-am:fram
    networks:
      localdev:
        aliases:
          - frig.darkedges.localdev
  dfq-am:
    container_name: dfq-am
    image: devspace-forgerock-quickstart/fram:7.2.0-fbc
    build:
      context: ./docker/fram
      args:
        CONFIG_HOME: /opt/amster/config
    command: start
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 2048M
        reservations:
          cpus: "1"
          memory: 2048M
    volumes:
      - secrets:/var/run/secrets:r
    env_file:
      - .env/fram/.env
    ports:
      - "8081:8080/tcp"
    links:
      - dfq-ds:frds
    healthcheck:
      test: curl --include --retry 10 --retry-connrefused 'http://localhost:8080/openam/json/health/live' || exit 1
    depends_on:
      dfq-ds:
        condition: service_healthy
    networks:
      localdev:
        aliases:
          - fram.darkedges.localdev
  dfq-ds:
    container_name: dfq-ds
    image: devspace-forgerock-quickstart/frds:7.2.0-fbc
    build:
      context: docker/frds
    command: init_start
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.5"
          memory: 512M
    environment:
      INIT_INSTANCE_LDIF: true
      INIT_INSTANCE_PROFILE_VERSION: 7.1.0
    env_file:
      - .env/frds/.env
    volumes:
      - secrets:/var/run/secrets:r
      - frds-development:/opt/frds/instance/data:rw
    ports:
      - "11636:1636/tcp"
      - "11389:1389/tcp"
    healthcheck:
      test: [ "CMD", "/opt/frds/healthCheck.sh" ]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - localdev
volumes:
  secrets:
  frds-development:
networks:
  localdev:
