#!/bin/bash

TOMCAT_HOME=/usr/local/tomcat
HOSTNAME=$(hostname)

generateRandomSecret() {
    cat /dev/urandom | tr -dc 'A-Za-z0-9' | head -c 32
}

am-crypto() {
    java -jar /home/forgerock/crypto-tool.jar $@
}

AM_PASSWORDS_AMADMIN=${AM_PASSWORDS_AMADMIN:-Passw0rd}
# File Based Connfiguration Environment values
export SECRETS_PATH=${SECRETS_PATH:-${AM_HOME}/security}
export AM_SECRETS_PATH=${AM_SECRETS_PATH:-$SECRETS_PATH/am}
export AMSTER_SECRETS_PATH=${AMSTER_SECRETS_PATH:-$SECRETS_PATH/amster}
export AMSTER_SECRETS_KEYS_PATH=${AMSTER_SECRETS_KEYS_PATH:-${SECRETS_PATH}/keys/amster/authorized_keys}
export AM_SERVER_PROTOCOL=${AM_SERVER_PROTOCOL:-"http"}
FQDN=${FQDN:-"am.7f000001.nip.io"}
export AM_SERVER_FQDN=${AM_SERVER_FQDN:-$FQDN}
export AM_SERVER_PORT=${AM_SERVER_PORT:-8080}
export AM_SERVER_CONTEXT=${AM_SERVER_CONTEXT:-"/am"}

export AM_STORES_USER_TYPE=${AM_STORES_USER_TYPE:-"LDAPv3ForOpenDS"}

export AM_ENCRYPTION_KEY=${AM_ENCRYPTION_KEY:-"rMWLMd7UJEJFeY0VpCbM3dBwtWDssH65"}

AM_PASSWORDS_DSAMEUSER_CLEAR=${AM_PASSWORDS_DSAMEUSER_CLEAR:-"rMWLMd7UJEJFeY0VpCbM3dBwtWDssH65"}
export AM_PASSWORDS_DSAMEUSER_HASHED_ENCRYPTED=${AM_PASSWORDS_DSAMEUSER_HASHED_ENCRYPTED:-$(echo $AM_PASSWORDS_DSAMEUSER_CLEAR | am-crypto hash encrypt des)}
export AM_PASSWORDS_DSAMEUSER_ENCRYPTED=${AM_PASSWORDS_DSAMEUSER_ENCRYPTED:-$(echo $AM_PASSWORDS_DSAMEUSER_CLEAR | am-crypto encrypt des)}

AM_PASSWORDS_ANONYMOUS_CLEAR=${AM_PASSWORDS_ANONYMOUS_CLEAR:-"rMWLMd7UJEJFeY0VpCbM3dBwtWDssH65"}
AM_PASSWORDS_ANONYMOUS_HASHED=${AM_PASSWORDS_ANONYMOUS_HASHED:-$(echo $AM_PASSWORDS_ANONYMOUS_CLEAR | am-crypto hash)}
export AM_PASSWORDS_ANONYMOUS_HASHED_ENCRYPTED=$(echo $AM_PASSWORDS_ANONYMOUS_HASHED | am-crypto encrypt des)

AM_PASSWORDS_AMADMIN_CLEAR=${AM_PASSWORDS_AMADMIN_CLEAR:-"Passw0rd"}
AM_PASSWORDS_AMADMIN_HASHED=${AM_PASSWORDS_AMADMIN_HASHED:-$(echo $AM_PASSWORDS_AMADMIN_CLEAR | am-crypto hash)}
unset AM_PASSWORDS_AMADMIN_CLEAR
export AM_PASSWORDS_AMADMIN_HASHED_ENCRYPTED=$(echo $AM_PASSWORDS_AMADMIN_HASHED | am-crypto encrypt des)

export AM_KEYSTORE_DEFAULT_PASSWORD=$(cat $AM_HOME/security/secrets/default/.storepass)
export AM_KEYSTORE_DEFAULT_ENTRY_PASSWORD=$(cat $AM_HOME/security/secrets/default/.keypass)

export AM_STORES_SSL_ENABLED=${AM_STORES_SSL_ENABLED:-"false"}
if [ "$AM_STORES_SSL_ENABLED" == "true" ]
then
  export AM_STORES_USER_CONNECTION_MODE="${AM_STORES_USER_CONNECTION_MODE:-"LDAPS"}"
  export AM_AUTHENTICATION_MODULES_LDAP_CONNECTION_MODE="${AM_AUTHENTICATION_MODULES_LDAP_CONNECTION_MODE:-"LDAPS"}"
else
  export AM_STORES_USER_CONNECTION_MODE="${AM_STORES_USER_CONNECTION_MODE:-"LDAP"}"
  export AM_AUTHENTICATION_MODULES_LDAP_CONNECTION_MODE="${AM_AUTHENTICATION_MODULES_LDAP_CONNECTION_MODE:-"LDAP"}"
fi

export AM_STORES_USER_USERNAME="${AM_STORES_USER_USERNAME:-"uid=am-identity-bind-account,ou=admins,ou=identities"}"
export AM_STORES_USER_PASSWORD="${AM_STORES_USER_PASSWORD:-"Passw0rd"}"
export AM_STORES_USER_SERVERS="${AM_STORES_USER_SERVERS:-"dfq-ds:1389"}"
export AM_STORES_USER_SSL_ENABLED="${AM_STORES_USER_SSL_ENABLED:-"false"}"
export AM_STORES_USER_MTLS_ENABLED="${AM_STORES_USER_MTLS_ENABLED:-"false"}"

export AM_STORES_CTS_USERNAME="${AM_STORES_CTS_USERNAME:-"uid=openam_cts,ou=admins,ou=famrecords,ou=openam-session,ou=tokens"}"
export AM_STORES_CTS_PASSWORD="${AM_STORES_CTS_PASSWORD:-"$AM_STORES_USER_PASSWORD"}"
export AM_STORES_CTS_SERVERS="${AM_STORES_CTS_SERVERS:-"$AM_STORES_USER_SERVERS"}"
export AM_STORES_CTS_SSL_ENABLED="${AM_STORES_CTS_SSL_ENABLED:-"$AM_STORES_SSL_ENABLED"}"
export AM_STORES_CTS_MTLS_ENABLED="${AM_STORES_CTS_MTLS_ENABLED:-"$AM_STORES_USER_MTLS_ENABLED"}"
export AM_STORES_CTS_ROOT_SUFFIX="${AM_STORES_CTS_ROOT_SUFFIX:-ou=famrecords,ou=openam-session,ou=tokens}"

export AM_STORES_APPLICATION_ENABLED="${AM_STORES_APPLICATION_ENABLED:-"true"}"
export AM_STORES_APPLICATION_USERNAME="${AM_STORES_APPLICATION_USERNAME:-"uid=am-config,ou=admins,ou=am-config"}"
export AM_STORES_APPLICATION_PASSWORD="${AM_STORES_APPLICATION_PASSWORD:-"$AM_STORES_USER_PASSWORD"}"
export AM_STORES_APPLICATION_SERVERS="${AM_STORES_APPLICATION_SERVERS:-"$AM_STORES_USER_SERVERS"}"
export AM_STORES_APPLICATION_SSL_ENABLED="${AM_STORES_APPLICATION_SSL_ENABLED:-"$AM_STORES_SSL_ENABLED"}"
export AM_STORES_APPLICATION_MTLS_ENABLED="${AM_STORES_APPLICATION_MTLS_ENABLED:-"$AM_STORES_USER_MTLS_ENABLED"}"

export AM_STORES_POLICY_ENABLED="${AM_STORES_POLICY_ENABLED:-"true"}"
export AM_STORES_POLICY_USERNAME="${AM_STORES_POLICY_USERNAME:-"uid=am-config,ou=admins,ou=am-config"}"
export AM_STORES_POLICY_PASSWORD="${AM_STORES_POLICY_PASSWORD:-"$AM_STORES_APPLICATION_PASSWORD"}"
export AM_STORES_POLICY_SERVERS="${AM_STORES_POLICY_SERVERS:-"$AM_STORES_APPLICATION_SERVERS"}"
export AM_STORES_POLICY_SSL_ENABLED="${AM_STORES_POLICY_SSL_ENABLED:-"$AM_STORES_APPLICATION_SSL_ENABLED"}"

export AM_STORES_UMA_USERNAME="${AM_STORES_UMA_USERNAME:-"uid=am-config,ou=admins,ou=am-config"}"
export AM_STORES_UMA_PASSWORD="${AM_STORES_UMA_PASSWORD:-"$AM_STORES_APPLICATION_PASSWORD"}"
export AM_STORES_UMA_SERVERS="${AM_STORES_UMA_SERVERS:-"$AM_STORES_APPLICATION_SERVERS"}"
export AM_STORES_UMA_SSL_ENABLED="${AM_STORES_UMA_SSL_ENABLED:-"$AM_STORES_APPLICATION_SSL_ENABLED"}"
export AM_STORES_UMA_MTLS_ENABLED="${AM_STORES_UMA_MTLS_ENABLED:-"$AM_STORES_APPLICATION_MTLS_ENABLED"}"
export AM_STORES_UMA_ROOT_SUFFIX=${AM_STORES_UMA_ROOT_SUFFIX:-ou=am-config}

export AM_AUTHENTICATION_MODULES_LDAP_USERNAME="${AM_AUTHENTICATION_MODULES_LDAP_USERNAME:-"$AM_STORES_USER_USERNAME"}"
export AM_AUTHENTICATION_MODULES_LDAP_PASSWORD="${AM_AUTHENTICATION_MODULES_LDAP_PASSWORD:-"$AM_STORES_USER_PASSWORD"}"
export AM_AUTHENTICATION_MODULES_LDAP_SERVERS="${AM_AUTHENTICATION_MODULES_LDAP_SERVERS:-"$AM_STORES_USER_SERVERS"}"

export AM_AUTHENTICATION_SHARED_SECRET="${AM_AUTHENTICATION_SHARED_SECRET:-$(generateRandomSecret | base64)}"
export AM_SESSION_STATELESS_SIGNING_KEY="${AM_SESSION_STATELESS_SIGNING_KEY:-$(generateRandomSecret | base64)}"
export AM_SESSION_STATELESS_ENCRYPTION_KEY="${AM_SESSION_STATELESS_ENCRYPTION_KEY:-$(generateRandomSecret | base64)}"

export AM_MONITORING_PROMETHEUS_PASSWORD_ENCRYPTED="${AM_MONITORING_PROMETHEUS_PASSWORD_ENCRYPTED:-$( echo -n "${AM_PROMETHEUS_PASSWORD:-prometheus}" | am-crypto encrypt des )}"

export AM_OIDC_CLIENT_SUBJECT_IDENTIFIER_HASH_SALT="${AM_OIDC_CLIENT_SUBJECT_IDENTIFIER_HASH_SALT:-"Passw0rd"}"

export AM_SELFSERVICE_LEGACY_CONFIRMATION_EMAIL_LINK_SIGNING_KEY="${AM_SELFSERVICE_LEGACY_CONFIRMATION_EMAIL_LINK_SIGNING_KEY:-$(generateRandomSecret | base64)}"

export AM_AUTHENTICATION_MODULES_LDAP_CONNECTION_MODEKEY=${AM_AUTHENTICATION_MODULES_LDAP_CONNECTION_MODEKEY:-Passw0rd}
export AM_SERVER_HOSTNAMES=${AM_SERVER_HOSTNAMES:-am.7f000001.nip.io,platform.7f000001.nip.io,dfq-am,am,am-config}
export AM_KUBERNETES_SERVICE_NAME=${AM_KUBERNETES_SERVICE_NAME:-dfq-am}
export AM_PLATFORM_FQDN=${AM_PLATFORM_FQDN:-platform.7f000001.nip.io}
export AM_PLATFORM_URL=${AM_PLATFORM_URL:-https://platform.7f000001.nip.io:8443}
env|sort

if [ -z "$SERVER_URL" ]; then
    NAMESPACE="$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)"
    SERVICE_DOMAIN=${HOSTNAME%-*}
    SERVER_URL="${SERVER_SCHEME}://${HOSTNAME}.${SERVICE_DOMAIN}.${NAMESPACE}.svc.cluster.local:${SERVER_PORT}/am"
else 
    SERVER_URL="${SERVER_SCHEME}://${SERVER_URL}:${SERVER_PORT}/am"
fi

CATALINA_OPTS="$CATALINA_OPTS $FRAM_CONTAINER_JVM_ARGS $CATALINA_USER_OPTS $JFR_OPTS"

if [ ! -z "$TRUSTSTORE_PATH" ] && [ ! -z "$TRUSTSTORE_PASSWORD" ]; then
    CATALINA_OPTS="$CATALINA_OPTS -Djavax.net.ssl.trustStore=$TRUSTSTORE_PATH -Djavax.net.ssl.trustStorePassword=$TRUSTSTORE_PASSWORD -Djavax.net.ssl.trustStoreType=jks"
fi
start() {
    ${TOMCAT_HOME}/bin/catalina.sh run
}

stop() {
    ${TOMCAT_HOME}/bin/catalina.sh stop -force
}

CMD="${1:-run}"

case "$CMD" in
start)
    start
    ;; 
stop)
    stop
    ;;
*)
    exec "$@"
esac
